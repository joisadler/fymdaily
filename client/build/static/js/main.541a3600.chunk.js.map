{"version":3,"sources":["history.js","hooks/useAuth.js","services/http.service.js","services/user.service.js","actions/MessageActions.js","actions/UserActions.js","components/Entry/LoginForm/index.jsx","components/Entry/SignupForm/index.jsx","components/Footer/index.jsx","components/Entry/EntryPage/index.jsx","services/history.service.js","actions/HistoryActions.js","actions/SystemActions.js","services/calculation.service.js","components/Home/CaloriesChartContent/index.jsx","components/Home/CaloriesChart/index.jsx","components/Loader/index.js","actions/SettingsMenuActions.js","services/food.service.js","actions/FoodActions.js","components/CustomFood/CreateCustomFoodModal/index.jsx","components/Navigation/NavButton/index.jsx","components/Navigation/Navbar/index.jsx","components/Home/MacrosLine/index.jsx","components/Home/MacrosContainer/index.jsx","hooks/useLoadUser.js","components/Home/HomePage/index.jsx","components/Settings/UserSettingsPage/index.jsx","services/util.servise.js","components/ConfirmModal/index.jsx","components/EatenFood/EditEatenFoodModal/index.jsx","components/EatenFood/EatenFoodCard/index.jsx","components/EatenFood/EatenFoodPage/index.jsx","hooks/useFoodSearch.js","components/AddEatenFood/AddEatenFoodModal/index.jsx","components/AddEatenFood/AddEatenFoodCard/index.jsx","components/AddEatenFood/AddEatenFoodPage/index.jsx","components/CustomFood/EditCustomFoodModal/index.jsx","components/CustomFood/CustomFoodCard/index.jsx","components/CustomFood/CustomFoodPage/index.jsx","components/Settings/AccountSettingsPage/index.jsx","components/Settings/PreferencesPage/index.jsx","components/Settings/StatisticsPage/index.jsx","components/Settings/SettingsMenu/index.jsx","App.js","serviceWorker.js","reducers/SystemReducer.js","reducers/UserReducer.js","reducers/MessageReducer.js","reducers/HistoryReducer.js","reducers/SettingsMenuReducer.js","reducers/FoodReducer.js","reducers/index.js","store.js","index.js"],"names":["history","createBrowserHistory","func","dispatch","useDispatch","userCreds","axios","Axios","create","withCredentials","ajax","endpoint","a","method","data","url","res","console","log","JSON","stringify","dir","response","status","push","userCred","httpService","user","localStorage","clear","login","logout","signup","getUser","getById","userId","remove","update","_id","setMessage","message","type","MessageActions","_setUser","updateUser","newData","localLoggedinUser","parse","userData","userService","LoginForm","setCurrentForm","useState","usernameOrEmail","setUsernameOrEmail","password","setPassword","useSelector","state","msg","doLogin","useAuth","className","onSubmit","e","preventDefault","style","color","name","value","onChange","target","onFocus","aria-label","placeholder","onClick","SignupForm","username","setUsername","email","setEmail","confirmPassword","setConfirmPassword","doSignup","currentYear","Date","getFullYear","yearToShow","href","src","alt","border","currentForm","Footer","getHistoryEntry","date","toLocaleDateString","entry","getEatenFoods","eaten_foods","addEatenFood","food","updatedEntry","updateEatenFood","deleteEatenFood","setEatenFoods","eatenFoods","loadEatenFoods","newFood","addFood","updatedFoods","updateEatenFoods","updatedFood","deleteFood","physicalActivityRatios","veryLight","light","moderate","heavy","veryHeavy","calorieSurplusRatios","fastWeightLoss","normalWeightLoss","weightMaintenance","massGain","proteinNeedPerKg","getNumbers","bodyWeight","height","gender","waistCircumference","neckCircumference","hipCircumference","physicalActivityLevel","goal","physicalActivityRatio","calorieSurplusRatio","leanBodyMass","Math","log10","dailyCalorieNeed","dailyProteinNeed","dailyFatNeed","dailyCarbNeed","currentCalories","reduce","acc","current","calories","weight","currentProteins","proteins","currentFats","fats","currentCarbs","carbs","currentCaloriesRemainder","currentPercentOfDailyCalorieNeed","currentPercentOfDailyProteinNeed","currentPercentOfDailyFatNeed","currentPercentOfDailyCarbNeed","currentProteinsToCalories","currentFatsToCalories","currentCarbsToCalories","percentageOfProteinsInDailyCalorieNeed","percentageOfFatsInDailyCalorieNeed","percentageOfCarbsInDailyCalorieNeed","percentageOfEmptyCaloriesInDailyCalorieNeed","percentageOfCaloriesRemainderInDailyCalorieNeed","round","CaloriesChartContent","numbers","isAlternateContentShown","Number","isNaN","abs","CaloriesChart","toggleAlternateContent","labels","datasets","backgroundColor","borderColor","borderWidth","options","maintainAspectRatio","cutoutPercentage","legend","display","tooltips","position","titleFontFamily","bodyFontFamily","displayColors","callbacks","title","tooltipItem","_data","index","label","dataset","total","Object","values","_meta","percent","chartRef","useRef","innerSize","setInnerSize","setSize","newInnerSize","window","getComputedStyle","slice","useLayoutEffect","addEventListener","removeEventListener","ref","onKeyDown","code","charCode","keyCode","handleKeyDown","role","aria-checked","tabIndex","width","Loader","isLoading","system","size","margin","loading","showMenu","hideMenu","toggleMenu","getFoods","foods","getCustomFoods","addCustomFood","foodData","updateCustomFood","deleteCustomFood","foodId","_setFoods","_addFood","_deleteFood","updateFood","createFood","updateCustomFoods","CreateCustomFoodModal","isModalOpen","closeModal","Modal","setAppElement","setName","brand","setBrand","setCalories","setProteins","setFats","setCarbs","useAsyncCallback","isOpen","onRequestClose","contentLabel","execute","required","min","max","step","NavButton","to","icon","useHistory","isCreateFoodModalOpen","setIsCreateFoodModalOpen","MenuActions","stopPropagation","defaultButtonsData","key","buttonsData","Navbar","Buttons","currentPath","useLocation","pathname","map","b","MacrosLine","nutrient","Nutrient","toUpperCase","data-tip","data-for","id","aria-haspopup","place","effect","MacrosContainer","loggedInUser","useEffect","HomePage","setIsAlternateContentShown","useLoadUser","UserSettingsPage","currentHeight","currentBodyWeight","currentGender","currentHipCircumference","currrentWaistCircumference","currentNeckCircumference","currentPhysicalActivityLevel","currentGoal","isUserInfoSet","setHeight","setBodyWeight","setGender","setHipCircumference","setWaistCircumference","setNeckCircumference","setPhysicalActivityLevel","setGoal","handleChange","set","saveUserSettings","htmlFor","data-name","getRandomStr","random","toString","substring","ConfirmModal","onClose","text","onYes","onNo","yesButtonText","noButtonText","defaultProps","EditEatenFoodModal","previousWeight","setWeight","removeFood","createConfirmModal","form","confirmAlert","customUI","EatenFoodCard","caloriesPer100g","proteinsPer100g","fatsPer100g","carbsPer100g","setIsModalOpen","openModal","aria-selected","EatenFoodPage","totalCalories","totalProteins","totalFats","totalCarbs","totalData","setTotalData","inputText","setInputText","loadFoods","AddEatenFoodModal","AddEatenFoodCard","AddEatenFoodPage","useFoodSearch","searchInput","focus","minLength","debounceTimeout","inputRef","handleSearchInput","sort","localeCompare","EditCustomFoodModal","prevName","prevBrand","prevCalories","prevProteins","prevFats","prevCarbs","CustomFoodCard","CustomFoodPage","AccountSettingsPage","PreferencesPage","StatisticsPage","SettingsMenu","isShown","settingsMenu","menuActions","App","exact","path","component","EntryPage","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","initialState","rootReducer","combineReducers","action","filter","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","Store","createStore","applyMiddleware","thunk","library","add","fab","faPlusCircle","faList","faCog","faHome","faUtensils","faFolderPlus","faFolderOpen","faTrash","ReactDOM","render","store","document","getElementById","URL","process","origin","fetch","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.541a3600.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n","import { useDispatch } from 'react-redux';\n\nexport default (func) => {\n  const dispatch = useDispatch();\n  return (userCreds) => {\n    dispatch(func(userCreds));\n  };\n};\n","import Axios from 'axios';\nimport history from '../history';\n\nconst BASE_URL = process.env.NODE_ENV === 'production'\n  ? '/api/'\n  // : '//localhost:4000/api/';\n  : '//192.168.0.4:4000/api/'; // local network IP\n\nconst axios = Axios.create({\n  withCredentials: true,\n});\n\nasync function ajax(endpoint, method = 'get', data = null) {\n  try {\n    const res = await axios({\n      url: `${BASE_URL}${endpoint}`,\n      method,\n      data,\n    });\n    return res.data;\n  } catch (err) {\n    // eslint-disable-next-line max-len\n    console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${JSON.stringify(data)}`);\n    console.dir(err);\n    if (err.response && err.response.status === 401) {\n      history.push('/');\n    }\n    throw err;\n  }\n}\n\nexport default {\n  get(endpoint, data) {\n    return ajax(endpoint, 'GET', data);\n  },\n  post(endpoint, data) {\n    return ajax(endpoint, 'POST', data);\n  },\n  put(endpoint, data) {\n    return ajax(endpoint, 'PUT', data);\n  },\n  delete(endpoint, data) {\n    return ajax(endpoint, 'DELETE', data);\n  },\n};\n","import httpService from './http.service';\n\nfunction getUser() {\n  return httpService.get('user');\n}\n\nfunction getById(userId) {\n  return httpService.get(`user/${userId}`);\n}\n\nfunction remove(userId) {\n  return httpService.delete(`user/${userId}`);\n}\n\nfunction update(user) {\n  return httpService.put(`user/${user._id}`, user);\n}\n\nasync function login(userCred) {\n  const res = await httpService.post('auth/login', userCred);\n  if (res.user) {\n    return res;\n  }\n  return res;\n}\n\nasync function signup(userCred) {\n  const res = await httpService.post('auth/signup', userCred);\n  if (res.user) {\n    return res;\n  }\n  return res;\n}\n\nasync function logout() {\n  await httpService.post('auth/logout');\n  localStorage.clear();\n}\n\nexport default {\n  login,\n  logout,\n  signup,\n  getUser,\n  getById,\n  remove,\n  update,\n};\n","/* eslint-disable import/prefer-default-export */\nfunction setMessage(message) {\n  return {\n    type: 'SET_MESSAGE',\n    message,\n  };\n}\n\nexport default {\n  setMessage,\n};\n","import userService from '../services/user.service';\nimport history from '../history';\nimport MessageActions from './MessageActions';\n\nconst { setMessage } = MessageActions;\n\nexport function _setUser(user) {\n  return {\n    type: 'SET_USER',\n    user,\n  };\n}\n\nexport function loadUser() {\n  return async (dispatch) => {\n    try {\n      const user = await userService.getUser();\n      dispatch(_setUser(user));\n    } catch (err) {\n      console.log('UserActions: err in loadUser', err);\n    }\n  };\n}\n\nexport function updateUser(newData) {\n  return async (dispatch) => {\n    try {\n      const localLoggedinUser = JSON.parse(localStorage.user);\n      const userData = {\n        ...localLoggedinUser,\n        ...newData,\n      };\n      const user = await userService.update(userData);\n      dispatch(_setUser(user));\n      history.push('/home');\n    } catch (err) {\n      console.log('UserActions: err in updateUser', err);\n    }\n  };\n}\n\nexport function login(userCreds) {\n  return async (dispatch) => {\n    const res = await userService.login(userCreds);\n    const { user, message } = res;\n    if (!user) dispatch(setMessage(message));\n    else {\n      dispatch(_setUser(user));\n      dispatch(setMessage(''));\n      history.push('/home');\n    }\n  };\n}\n\nexport function signup(userCreds) {\n  return async (dispatch) => {\n    const res = await userService.signup(userCreds);\n    const { user, message } = res;\n    if (!user) dispatch(setMessage(message));\n    else {\n      dispatch(_setUser(user));\n      dispatch(setMessage(''));\n      history.push('/user-settings');\n    }\n  };\n}\n\nexport function logout() {\n  return async (dispatch) => {\n    await userService.logout();\n    dispatch(_setUser(null));\n  };\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport useAuth from '../../../hooks/useAuth';\nimport { login } from '../../../actions/UserActions';\nimport MessageActions from '../../../actions/MessageActions';\n\nconst LoginForm = ({ setCurrentForm }) => {\n  const [usernameOrEmail, setUsernameOrEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const message = useSelector(state => state.message.message);\n  const dispatch = useDispatch();\n  const setMessage = msg => dispatch(MessageActions.setMessage(msg));\n  const doLogin = useAuth(login);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!usernameOrEmail || !password) {\n      return setMessage('Please enter username/password!');\n    }\n    const userCreds = { usernameOrEmail, password };\n    doLogin(userCreds);\n    setUsernameOrEmail('');\n    setPassword('');\n  };\n\n  return (\n    <form className=\"login-form\" onSubmit={handleSubmit}>\n      <p className=\"login-message\" style={{ color: 'red' }}>{message}</p>\n      <fieldset className=\"credentials\">\n        <input\n          type=\"text\"\n          name=\"usernameOrEmail\"\n          value={usernameOrEmail}\n          onChange={e => setUsernameOrEmail(e.target.value)}\n          onFocus={() => setMessage('')}\n          aria-label=\"Username or Email\"\n          placeholder=\"Username or Email\"\n        />\n        <br />\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n          onFocus={() => setMessage('')}\n          aria-label=\"Password\"\n          placeholder=\"Password\"\n        />\n      </fieldset>\n      <section className=\"form-options-section\">\n        <section className=\"form-submit-section\">\n          <button type=\"submit\" className=\"login-button\">Log In</button>\n        </section>\n        <section className=\"other-option-section\">\n          Don&rsquo;t have an account?\n          <br />\n          <button\n            className=\"signup-option\"\n            type=\"button\"\n            onClick={() => { setCurrentForm('signup'); setMessage(''); }}\n          >\n            Sign Up\n          </button>\n        </section>\n      </section>\n    </form>\n  );\n};\n\nLoginForm.propTypes = {\n  setCurrentForm: PropTypes.func.isRequired,\n};\n\nexport default LoginForm;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport useAuth from '../../../hooks/useAuth';\nimport { signup } from '../../../actions/UserActions';\nimport MessageActions from '../../../actions/MessageActions';\n\nconst SignupForm = ({ setCurrentForm }) => {\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const message = useSelector(state => state.message.message);\n  const dispatch = useDispatch();\n  const setMessage = msg => dispatch(MessageActions.setMessage(msg));\n\n  const doSignup = useAuth(signup);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!username || !email || !password || !confirmPassword) {\n      return setMessage('All fields are required!');\n    }\n    if (password !== confirmPassword) {\n      return setMessage('Your password and confirmation password do not match!');\n    }\n    const userCreds = {\n      username,\n      email,\n      password,\n      confirmPassword,\n    };\n    doSignup(userCreds);\n    setUsername('');\n    setEmail('');\n    setPassword('');\n    setConfirmPassword('');\n  };\n\n  return (\n    <form className=\"signup-form\" onSubmit={handleSubmit}>\n      <p className=\"signup-message\" style={{ color: 'red' }}>{message}</p>\n      <fieldset className=\"credentials\">\n        <input\n          type=\"text\"\n          name=\"username\"\n          value={username}\n          onChange={e => setUsername(e.target.value)}\n          onFocus={() => setMessage('')}\n          aria-label=\"Username\"\n          placeholder=\"Username\"\n        />\n        <input\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n          onFocus={() => setMessage('')}\n          aria-label=\"Email\"\n          placeholder=\"Email\"\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n          onFocus={() => setMessage('')}\n          aria-label=\"Password\"\n          placeholder=\"Password\"\n        />\n        <input\n          type=\"password\"\n          name=\"confirmPassword\"\n          value={confirmPassword}\n          onChange={e => setConfirmPassword(e.target.value)}\n          onFocus={() => setMessage('')}\n          aria-label=\"Confirm Password\"\n          placeholder=\"Confirm Password\"\n        />\n      </fieldset>\n      <section className=\"form-options-section\">\n        <section className=\"form-submit-section\">\n          <button type=\"submit\" className=\"signup-button\">Sign Up</button>\n        </section>\n        <section className=\"other-option-section\">\n          Already have an account?\n          <br />\n          <button\n            className=\"login-option\"\n            type=\"button\"\n            onClick={() => { setCurrentForm('login'); setMessage(''); }}\n          >\n            Log In\n          </button>\n        </section>\n      </section>\n    </form>\n  );\n};\n\nSignupForm.propTypes = {\n  setCurrentForm: PropTypes.func.isRequired,\n};\n\nexport default SignupForm;\n","import React from 'react';\n\nexport default () => {\n  const currentYear = new Date().getFullYear();\n  const yearToShow = currentYear === 2019 ? '2019' : `2019-${currentYear}`;\n  return (\n    <footer className=\"main-footer\">\n      <p>\n        <span className=\"year\">\n          &copy;&nbsp;\n          {yearToShow}\n          ,&nbsp;\n        </span>\n        <a href=\"https://github.com/joisadler\">\n          Yossi Adler&nbsp;\n        </a>\n        and the FYMdaily&nbsp;\n        <a href=\"https://github.com/joisadler/fymdaily-client/graphs/contributors\">\n          contributors\n        </a>\n        .\n      </p>\n      <a href=\"https://platform.fatsecret.com\">\n        <img src=\"https://platform.fatsecret.com/api/static/images/powered_by_fatsecret.svg\" alt=\"Powered by FatSecret\" border=\"0\" />\n      </a>\n    </footer>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState } from 'react';\nimport LoginForm from '../LoginForm';\nimport SignupForm from '../SignupForm';\nimport Footer from '../../Footer';\n\nexport default () => {\n  const [currentForm, setCurrentForm] = useState('login');\n\n  return (\n    <>\n      <main className=\"page\">\n        <h1 className=\"app-description\">\n          <em>FYMdaily</em>\n          &nbsp;– simple and minimalistic calorie/macronutrient tracker. Sign up today and start Fit Your Macros daily!\n        </h1>\n        <div className=\"form-container\">\n          {\n            currentForm === 'login'\n              ? <LoginForm setCurrentForm={setCurrentForm} />\n              : <SignupForm setCurrentForm={setCurrentForm} />\n          }\n        </div>\n      </main>\n      <Footer />\n    </>\n  );\n};\n","import httpService from './http.service';\n\n// get todays history of the user\nexport async function getHistoryEntry(userId) {\n  const date = new Date().toLocaleDateString('ru-RU');\n  const entry = await httpService.get(`history/${userId}?date=${date}`);\n  return entry;\n}\n\nexport async function getEatenFoods(userId) {\n  const history = await getHistoryEntry(userId);\n  return history.eaten_foods;\n}\n\nexport async function addEatenFood(food) {\n  const date = new Date().toLocaleDateString('ru-RU');\n  const data = { date, food };\n  const updatedEntry = await httpService.post('history/food', data);\n  return updatedEntry.eaten_foods;\n}\n\nexport async function updateEatenFood(food) {\n  const date = new Date().toLocaleDateString('ru-RU');\n  const data = { date, food };\n  const updatedEntry = await httpService.put('history/food', data);\n  return updatedEntry.eaten_foods;\n}\n\nexport async function deleteEatenFood(food) {\n  const date = new Date().toLocaleDateString('ru-RU');\n  const data = { date, food };\n  const updatedEntry = await httpService.delete('history/food', data);\n  return updatedEntry.eaten_foods;\n}\n","import {\n  getEatenFoods,\n  addEatenFood as addFood,\n  updateEatenFood,\n  deleteEatenFood as deleteFood,\n} from '../services/history.service';\n\nimport { loading, doneLoading } from './SystemActions';\n\nimport history from '../history';\n\nexport function setEatenFoods(eatenFoods) {\n  return {\n    type: 'SET_EATEN_FOODS',\n    eatenFoods,\n  };\n}\n\nexport function loadEatenFoods(userId) {\n  return async (dispatch) => {\n    try {\n      dispatch(loading());\n      const eatenFoods = await getEatenFoods(userId);\n      dispatch(setEatenFoods(eatenFoods));\n    } catch (err) {\n      console.log('HistoryActions: err in loadEatenFoods', err);\n    } finally {\n      dispatch(doneLoading());\n    }\n  };\n}\n\nexport function addEatenFood(newFood) {\n  return async (dispatch) => {\n    try {\n      const updatedFoods = await addFood(newFood);\n      dispatch(setEatenFoods(updatedFoods));\n      history.push('/home');\n    } catch (err) {\n      console.log('HistoryActions: err in addEatenFood', err);\n    }\n  };\n}\n\nexport function updateEatenFoods(updatedFood) {\n  return async (dispatch) => {\n    try {\n      const updatedFoods = await updateEatenFood(updatedFood);\n      dispatch(setEatenFoods(updatedFoods));\n    } catch (err) {\n      console.log('HistoryActions: err in updateEatenFoods', err);\n    }\n  };\n}\n\nexport function deleteEatenFood(food) {\n  return async (dispatch) => {\n    try {\n      const updatedFoods = await deleteFood(food);\n      dispatch(setEatenFoods(updatedFoods));\n    } catch (err) {\n      console.log('HistoryActions: err in deleteEatenFood', err);\n    }\n  };\n}\n","export function loading() {\n  return { type: 'LOADING_START' };\n}\n\nexport function doneLoading() {\n  return { type: 'LOADING_DONE' };\n}\n","/* eslint-disable max-len */\nconst physicalActivityRatios = {\n  veryLight: 1.2, // Sitting, watching TV, talking, very little to almost no activity.\n  light: 1.4, // Typing, teaching, retail work, combined with some walking throughout the day.\n  moderate: 1.6, // Jobs that involve some movement, combined with activities such as cycling, tennis, dancing, or weight training for 1-2 hours per day.\n  heavy: 1.8, // Heavy manual labor such working on construction site, combined with activities such as football or body building for 2 for 4 hours per day.\n  veryHeavy: 2, // A combination of moderate and heavy activity for 8 or more hours per day, plus 2-4 hours of intence training per day.\n};\n\nconst calorieSurplusRatios = {\n  fastWeightLoss: 0.75,\n  normalWeightLoss: 0.85,\n  weightMaintenance: 1,\n  massGain: 1.15,\n};\n\nconst proteinNeedPerKg = { // per kg of LEAN body mass!\n  fastWeightLoss: 1.6,\n  normalWeightLoss: 1.5,\n  weightMaintenance: 1.3,\n  massGain: 1.5,\n};\n\nconst caloriesPerGramOfProtein = 4;\nconst caloriesPerGramOfFat = 9;\nconst caloriesPerGramOfCarb = 4;\n\nconst getNumbers = (user, eatenFoods) => {\n  const {\n    bodyWeight,\n    height,\n    gender,\n    waistCircumference,\n    neckCircumference,\n    hipCircumference,\n    physicalActivityLevel,\n    goal,\n  } = user;\n\n  const physicalActivityRatio = physicalActivityRatios[physicalActivityLevel];\n  const calorieSurplusRatio = calorieSurplusRatios[goal];\n  const bodyFatPercentage = gender === 'male' // US Navy method to calculate body fat percentage\n    ? 495 / (1.0324 - 0.19077 * Math.log10(waistCircumference - neckCircumference) + 0.15456 * Math.log10(height)) - 450\n    : 495 / (1.29579 - 0.35004 * Math.log10(waistCircumference + hipCircumference - neckCircumference) + 0.22100 * Math.log10(height)) - 450;\n  const leanBodyMass = (bodyWeight * (100 - bodyFatPercentage)) / 100;\n  const basalMetabolicRate = 370 + (21.6 * leanBodyMass); // Katch-McArdle equation\n  const totalEnergyExpenditure = basalMetabolicRate * physicalActivityRatio;\n  const dailyCalorieNeed = totalEnergyExpenditure * calorieSurplusRatio;\n  const dailyProteinNeed = leanBodyMass * proteinNeedPerKg[goal];\n  const dailyFatNeed = (dailyCalorieNeed * 0.3) / caloriesPerGramOfFat;\n  const dailyCarbNeed = (dailyCalorieNeed - (dailyProteinNeed * caloriesPerGramOfProtein) - (dailyFatNeed * caloriesPerGramOfFat)) / caloriesPerGramOfCarb;\n\n  const currentCalories = eatenFoods\n    .reduce((acc, current) => acc\n    + (current.calories * current.weight) / 100, 0);\n  const currentProteins = eatenFoods\n    .reduce((acc, current) => acc + (current.proteins * current.weight) / 100, 0);\n  const currentFats = eatenFoods\n    .reduce((acc, current) => acc + (current.fats * current.weight) / 100, 0);\n  const currentCarbs = eatenFoods\n    .reduce((acc, current) => acc + (current.carbs * current.weight) / 100, 0);\n\n  const currentCaloriesRemainder = dailyCalorieNeed - currentCalories;\n\n  const currentPercentOfDailyCalorieNeed = (currentCalories\n    / dailyCalorieNeed) * 100;\n  const currentPercentOfDailyProteinNeed = (currentProteins\n    / dailyProteinNeed) * 100;\n  const currentPercentOfDailyFatNeed = (currentFats\n    / dailyFatNeed) * 100;\n  const currentPercentOfDailyCarbNeed = (currentCarbs\n    / dailyCarbNeed) * 100;\n\n  const currentProteinsToCalories = currentProteins * caloriesPerGramOfProtein;\n  const currentFatsToCalories = currentFats * caloriesPerGramOfFat;\n  const currentCarbsToCalories = currentCarbs * caloriesPerGramOfCarb;\n  const percentageOfProteinsInDailyCalorieNeed = (currentProteinsToCalories\n      / dailyCalorieNeed) * 100;\n  const percentageOfFatsInDailyCalorieNeed = (currentFatsToCalories\n      / dailyCalorieNeed) * 100;\n  const percentageOfCarbsInDailyCalorieNeed = (currentCarbsToCalories\n      / dailyCalorieNeed) * 100;\n  const percentageOfEmptyCaloriesInDailyCalorieNeed = (((currentCalories\n      - (currentProteinsToCalories\n        + currentFatsToCalories\n        + currentCarbsToCalories))\n        / dailyCalorieNeed) * 100) > 0\n    ? (((currentCalories\n        - (currentProteinsToCalories\n          + currentFatsToCalories\n          + currentCarbsToCalories))\n          / dailyCalorieNeed) * 100)\n    : 0;\n\n  const percentageOfCaloriesRemainderInDailyCalorieNeed = 100\n    - percentageOfProteinsInDailyCalorieNeed\n    - percentageOfFatsInDailyCalorieNeed\n    - percentageOfCarbsInDailyCalorieNeed\n    - percentageOfEmptyCaloriesInDailyCalorieNeed > 0\n    ? 100\n    - percentageOfProteinsInDailyCalorieNeed\n    - percentageOfFatsInDailyCalorieNeed\n    - percentageOfCarbsInDailyCalorieNeed\n    - percentageOfEmptyCaloriesInDailyCalorieNeed : 0;\n\n  // const percentOfProteinsInCurrentAmountOfCalories = (currentProteinsToCalories\n  //     / currentCalories) * 100;\n  // const percentOfFatsInCurrentAmountOfCalories = (currentFatsToCalories\n  //     / currentCalories) * 100;\n  // const percentOfCarbsInCurrentAmountOfCalories = (currentCarbsToCalories\n  //     / currentCalories) * 100;\n  // const percentOfEmptyCaloriesInCurrentAmountOfCalories = 100\n  //   - percentOfProteinsInCurrentAmountOfCalories\n  //   - percentOfFatsInCurrentAmountOfCalories\n  //   - percentOfCarbsInCurrentAmountOfCalories;\n\n  return {\n    dailyCalorieNeed: Math.round(dailyCalorieNeed),\n    dailyProteinNeed: Math.round(dailyProteinNeed),\n    dailyFatNeed: Math.round(dailyFatNeed),\n    dailyCarbNeed: Math.round(dailyCarbNeed),\n    currentCalories: Math.round(currentCalories),\n    currentProteins: Math.round(currentProteins),\n    currentFats: Math.round(currentFats),\n    currentCarbs: Math.round(currentCarbs),\n    currentCaloriesRemainder: Math.round(currentCaloriesRemainder),\n    currentPercentOfDailyCalorieNeed: Math.round(currentPercentOfDailyCalorieNeed),\n    currentPercentOfDailyProteinNeed: Math.round(currentPercentOfDailyProteinNeed),\n    currentPercentOfDailyFatNeed: Math.round(currentPercentOfDailyFatNeed),\n    currentPercentOfDailyCarbNeed: Math.round(currentPercentOfDailyCarbNeed),\n    percentageOfProteinsInDailyCalorieNeed: Math.round(percentageOfProteinsInDailyCalorieNeed),\n    percentageOfFatsInDailyCalorieNeed: Math.round(percentageOfFatsInDailyCalorieNeed),\n    percentageOfCarbsInDailyCalorieNeed: Math.round(percentageOfCarbsInDailyCalorieNeed),\n    percentageOfCaloriesRemainderInDailyCalorieNeed: Math.round(percentageOfCaloriesRemainderInDailyCalorieNeed),\n    percentageOfEmptyCaloriesInDailyCalorieNeed: Math.round(percentageOfEmptyCaloriesInDailyCalorieNeed),\n    // percentOfProteinsInCurrentAmountOfCalories: Math.round(percentOfProteinsInCurrentAmountOfCalories),\n    // percentOfFatsInCurrentAmountOfCalories: Math.round(percentOfFatsInCurrentAmountOfCalories),\n    // percentOfCarbsInCurrentAmountOfCalories: Math.round(percentOfCarbsInCurrentAmountOfCalories),\n    // percentOfEmptyCaloriesInCurrentAmountOfCalories: Math.round(percentOfEmptyCaloriesInCurrentAmountOfCalories),\n  };\n};\n\nexport default getNumbers;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CaloriesChartContent = ({ numbers, isAlternateContentShown }) => {\n  const {\n    dailyCalorieNeed,\n    currentCalories,\n    currentCaloriesRemainder,\n    currentPercentOfDailyCalorieNeed,\n  } = numbers;\n\n  if (!isAlternateContentShown) {\n    return (\n      <div\n        className=\"calories-chart-content\"\n      >\n        {currentCaloriesRemainder >= 0\n          ? (\n            <>\n              <h1 className=\"calories-headline\">You still need to consume</h1>\n              <p className=\"calories-number\">{Number.isNaN(currentCaloriesRemainder) ? '' : currentCaloriesRemainder}</p>\n              <h2 className=\"calories-subheadline\">calories to fit your daily need</h2>\n            </>\n          )\n          : (\n            <>\n              <h1 className=\"calories-headline\">Today you have consumed</h1>\n              <p className=\"calories-number\" style={{ color: 'red' }}>{Number.isNaN(Math.abs(currentCaloriesRemainder)) ? '' : Math.abs(currentCaloriesRemainder)}</p>\n              <h2 className=\"calories-subheadline\">calories more than your daily need</h2>\n            </>\n          )}\n      </div>\n    );\n  }\n  return (\n    <div\n      className=\"alternative-calories-chart-content\"\n    >\n      <p className=\"alternative-calories-chart-content-headline\">calories:</p>\n      <p className=\"alternative-calories-chart-content-number\">\n        {currentCalories}\n        /\n        {dailyCalorieNeed}\n      </p>\n      <p className=\"alternative-calories-chart-content-percent\">\n        {currentPercentOfDailyCalorieNeed}\n        %\n      </p>\n    </div>\n  );\n};\n\nCaloriesChartContent.propTypes = {\n  numbers: PropTypes.objectOf(PropTypes.number).isRequired,\n  isAlternateContentShown: PropTypes.bool.isRequired,\n};\n\nexport default CaloriesChartContent;\n","import React, { useState, useRef, useLayoutEffect } from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport PropTypes from 'prop-types';\nimport CaloriesChartContent from '../CaloriesChartContent';\n\nconst CaloriesChart = ({\n  numbers,\n  isAlternateContentShown,\n  toggleAlternateContent,\n}) => {\n  const {\n    percentageOfProteinsInDailyCalorieNeed,\n    percentageOfFatsInDailyCalorieNeed,\n    percentageOfCarbsInDailyCalorieNeed,\n    percentageOfCaloriesRemainderInDailyCalorieNeed,\n    percentageOfEmptyCaloriesInDailyCalorieNeed,\n  } = numbers;\n  const data = {\n    labels: ['Proteins', 'Fats', 'Carbs', 'Empty Calories', 'Still need to consume'],\n    datasets: [{\n      data: [\n        percentageOfProteinsInDailyCalorieNeed,\n        percentageOfFatsInDailyCalorieNeed,\n        percentageOfCarbsInDailyCalorieNeed,\n        percentageOfEmptyCaloriesInDailyCalorieNeed,\n        percentageOfCaloriesRemainderInDailyCalorieNeed,\n      ],\n\n      backgroundColor: [\n        '#109618',\n        '#ff9900',\n        '#990099',\n        '#fff',\n        '#f2f2f2',\n      ],\n      borderColor: '#000',\n      borderWidth: 1,\n    }],\n  };\n\n  const options = {\n    maintainAspectRatio: false,\n    cutoutPercentage: 80,\n    legend: {\n      display: false,\n    },\n    tooltips: {\n      position: 'nearest',\n      titleFontFamily: 'Montserrat, sans-serif',\n      bodyFontFamily: 'Montserrat, sans-serif',\n      backgroundColor: 'rgba(0, 0, 0, 0.9)',\n      displayColors: false,\n      callbacks: {\n        title(tooltipItem, _data) {\n          return _data.labels[tooltipItem[0].index];\n        },\n        label(tooltipItem, _data) {\n          const dataset = _data.datasets[0];\n          const { total } = Object.values(dataset._meta)[0];\n          const percent = Math.round(\n            (dataset.data[tooltipItem.index] / total) * 100,\n          );\n          return `${percent}% of total calorie intake`;\n        },\n      },\n    },\n  };\n\n  const chartRef = useRef(null);\n  const [innerSize, setInnerSize] = useState(-1);\n\n  const setSize = () => {\n    if (chartRef.current) {\n      const newInnerSize = Number(\n        window\n          .getComputedStyle(chartRef.current)\n          .height\n          .slice(0, -2),\n      );\n      setInnerSize(newInnerSize);\n    }\n  };\n\n  useLayoutEffect(() => {\n    setSize();\n    window.addEventListener('resize', setSize);\n    return () => {\n      window.removeEventListener('resize', setSize);\n    };\n  }, [innerSize]);\n\n  const handleKeyDown = (e) => {\n    const code = e.charCode || e.keyCode;\n    if ((code === 32) || (code === 13)) {\n      toggleAlternateContent();\n    }\n  };\n\n  return (\n    <article\n      className=\"calories-container\"\n      ref={chartRef}\n      onClick={toggleAlternateContent}\n      onKeyDown={(e) => { handleKeyDown(e); }}\n      // eslint-disable-next-line jsx-a11y/no-noninteractive-element-to-interactive-role\n      role=\"switch\"\n      aria-checked=\"false\"\n      tabIndex=\"0\"\n    >\n      <Doughnut\n        className=\"calories-chart\"\n        data={data}\n        options={options}\n      />\n      <div\n        className=\"calories-chart-inner\"\n        style={{\n          width: innerSize,\n          height: innerSize,\n        }}\n      >\n        <CaloriesChartContent\n          numbers={numbers}\n          isAlternateContentShown={isAlternateContentShown}\n          toggleAlternateContent={toggleAlternateContent}\n        />\n      </div>\n    </article>\n  );\n};\n\nCaloriesChart.propTypes = {\n  numbers: PropTypes.objectOf(PropTypes.number).isRequired,\n  isAlternateContentShown: PropTypes.bool.isRequired,\n  toggleAlternateContent: PropTypes.func.isRequired,\n};\n\nexport default CaloriesChart;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PulseLoader from 'react-spinners/PulseLoader';\n\nconst Loader = () => {\n  const isLoading = useSelector(state => state.system.isLoading);\n  return (\n    <div className=\"loader-container\">\n      <PulseLoader\n        size={15}\n        margin={2}\n        color=\"green\"\n        loading={isLoading}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","function showMenu() {\n  return {\n    type: 'SHOW_MENU',\n  };\n}\n\nfunction hideMenu() {\n  return {\n    type: 'HIDE_MENU',\n  };\n}\n\nfunction toggleMenu() {\n  return {\n    type: 'TOGGLE_MENU',\n  };\n}\n\nexport default {\n  showMenu,\n  hideMenu,\n  toggleMenu,\n};\n","import httpService from './http.service';\n\nexport async function getFoods(name) {\n  const foods = await httpService.get(`food?name=${name}`);\n  return foods;\n}\n\nexport async function getCustomFoods(name) {\n  const foods = await httpService.get(`food?name=${name}&custom=true`);\n  return foods;\n}\n\nexport async function addCustomFood(foodData) {\n  const food = await httpService.post('food', foodData);\n  return food;\n}\n\nexport async function updateCustomFood(foodData) {\n  const food = await httpService.put('food', foodData);\n  return food;\n}\n\nexport async function deleteCustomFood(foodId) {\n  const food = await httpService.delete(`food/${foodId}`);\n  return food;\n}\n","import {\n  getFoods,\n  getCustomFoods,\n  addCustomFood as createFood,\n  updateCustomFood,\n  deleteCustomFood as deleteFood,\n} from '../services/food.service';\n\nimport { loading, doneLoading } from './SystemActions';\n\nfunction _setFoods(foods) {\n  return {\n    type: 'SET_FOODS',\n    foods,\n  };\n}\n\nfunction _addFood(newFood) {\n  return {\n    type: 'ADD_CUSTOM_FOOD',\n    newFood,\n  };\n}\n\nfunction _deleteFood(foodId) {\n  return {\n    type: 'DELETE_CUSTOM_FOOD',\n    foodId,\n  };\n}\n\nexport function updateFood(updatedFood) {\n  return {\n    type: 'UPDATE_CUSTOM_FOOD',\n    updatedFood,\n  };\n}\n\nexport function loadFoods(text, pathname) {\n  return async (dispatch) => {\n    try {\n      dispatch(loading());\n      const foods = pathname === '/custom-foods'\n        ? await getCustomFoods(text)\n        : await getFoods(text);\n      dispatch(_setFoods(foods));\n    } catch (err) {\n      console.log('FoodActions: err in loadCustomFoods', err);\n    } finally {\n      dispatch(doneLoading());\n    }\n  };\n}\n\nexport function addCustomFood(foodData) {\n  return async (dispatch) => {\n    try {\n      const newFood = await createFood(foodData);\n      dispatch(_addFood(newFood));\n    } catch (err) {\n      console.log('FoodActions: err in addCustomFood', err);\n    }\n  };\n}\n\nexport function updateCustomFoods(foodData) {\n  return async (dispatch) => {\n    try {\n      const updatedFood = await updateCustomFood(foodData);\n      dispatch(updateFood(updatedFood));\n    } catch (err) {\n      console.log('FoodActions: err in updateCustomFoods', err);\n    }\n  };\n}\n\nexport function deleteCustomFood(foodId) {\n  return async (dispatch) => {\n    try {\n      await deleteFood(foodId);\n      dispatch(_deleteFood(foodId));\n    } catch (err) {\n      console.log('FoodActions: err in deleteCustomFood', err);\n    }\n  };\n}\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useAsyncCallback } from 'react-async-hook';\nimport Modal from 'react-modal';\nimport PropTypes from 'prop-types';\nimport { addCustomFood } from '../../../actions/FoodActions';\n\nconst CreateCustomFoodModal = ({\n  isModalOpen,\n  closeModal,\n}) => {\n  Modal.setAppElement('#root');\n\n  const [name, setName] = useState('');\n  const [brand, setBrand] = useState('');\n  const [calories, setCalories] = useState('');\n  const [proteins, setProteins] = useState('');\n  const [fats, setFats] = useState('');\n  const [carbs, setCarbs] = useState('');\n\n  const dispatch = useDispatch();\n  const createFood = useAsyncCallback(async () => {\n    const food = {\n      name,\n      brand,\n      calories,\n      proteins,\n      fats,\n      carbs,\n    };\n    dispatch(addCustomFood(food));\n  });\n\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n    createFood.execute();\n    closeModal();\n  };\n\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      onRequestClose={closeModal}\n      contentLabel=\"Create food\"\n      className=\"create-custom-food\"\n    >\n      <button\n        className=\"create-custom-food-close-button\"\n        type=\"button\"\n        onClick={e => closeModal(e)}\n      >\n        &times;\n      </button>\n      <h2 className=\"create-custom-food-header\">\n        Create new food\n      </h2>\n      <form\n        className=\"create-custom-food-form\"\n        onSubmit={onFormSubmit}\n      >\n        <input\n          type=\"text\"\n          className=\"create-custom-food-input create-custom-food-name-input\"\n          aria-label=\"name\"\n          value={name}\n          placeholder=\"Name\"\n          onChange={e => setName(e.target.value)}\n          required\n        />\n        <input\n          type=\"text\"\n          className=\"create-custom-food-input create-custom-food-brand-input\"\n          aria-label=\"brand\"\n          value={brand}\n          placeholder=\"Brand\"\n          onChange={e => setBrand(e.target.value)}\n          required\n        />\n        <input\n          type=\"number\"\n          min=\"0\"\n          max=\"1000\"\n          step=\"any\"\n          className=\"create-custom-food-input create-custom-food-calories-input\"\n          aria-label=\"calories\"\n          value={calories}\n          placeholder=\"Calories\"\n          onChange={e => setCalories(e.target.value)}\n          required\n        />\n        <input\n          type=\"number\"\n          min=\"0\"\n          max=\"100\"\n          step=\"any\"\n          className=\"create-custom-food-input create-custom-food-proteins-input\"\n          aria-label=\"proteins\"\n          value={proteins}\n          placeholder=\"Proteins\"\n          onChange={e => setProteins(e.target.value)}\n          required\n        />\n        <input\n          type=\"number\"\n          min=\"0\"\n          max=\"100\"\n          step=\"any\"\n          className=\"create-custom-food-input create-custom-food-fats-input\"\n          aria-label=\"fats\"\n          value={fats}\n          placeholder=\"Fats\"\n          onChange={e => setFats(e.target.value)}\n          required\n        />\n        <input\n          type=\"number\"\n          min=\"0\"\n          max=\"100\"\n          step=\"any\"\n          className=\"create-custom-food-input create-custom-food-carbs-input\"\n          aria-label=\"carbs\"\n          value={carbs}\n          placeholder=\"Carbs\"\n          onChange={e => setCarbs(e.target.value)}\n          required\n        />\n        <div className=\"create-custom-food-submit-button-container\">\n          <button\n            type=\"submit\"\n            className=\"create-custom-food-submit-button\"\n          >\n            Create\n          </button>\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nCreateCustomFoodModal.propTypes = {\n  isModalOpen: PropTypes.bool.isRequired,\n  closeModal: PropTypes.func.isRequired,\n};\n\nexport default CreateCustomFoodModal;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport MenuActions from '../../../actions/SettingsMenuActions';\nimport CreateCustomFoodModal from '../../CustomFood/CreateCustomFoodModal';\n\nconst NavButton = ({ to, icon }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const [isCreateFoodModalOpen, setIsCreateFoodModalOpen] = useState(false);\n\n  const openCreateFoodModal = () => {\n    setIsCreateFoodModalOpen(true);\n  };\n\n  const closeCreateFoodModal = (e) => {\n    if (e) e.stopPropagation();\n    setIsCreateFoodModalOpen(false);\n  };\n\n  const handleClick = () => {\n    if (to === '/menu') {\n      return dispatch(MenuActions.toggleMenu());\n    }\n    if (to === '/create-custom-food') {\n      return openCreateFoodModal();\n    }\n    dispatch(MenuActions.hideMenu());\n    history.push(to);\n  };\n  return (\n    <>\n      <button\n        type=\"button\"\n        className=\"nav-button\"\n        onClick={handleClick}\n      >\n        <FontAwesomeIcon icon={icon} className=\"nav-button-icon\" />\n      </button>\n      {isCreateFoodModalOpen && (\n        <CreateCustomFoodModal\n          isModalOpen={isCreateFoodModalOpen}\n          closeModal={closeCreateFoodModal}\n        />\n      )}\n    </>\n  );\n};\n\nNavButton.propTypes = {\n  to: PropTypes.string.isRequired,\n  icon: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default NavButton;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport NavButton from '../NavButton';\n\nconst defaultButtonsData = [\n  { to: '/eaten-food', icon: ['fas', 'list'], key: 1 },\n  { to: '/add-eaten-food', icon: ['fas', 'utensils'], key: 2 },\n  { to: '/home', icon: ['fas', 'home'], key: 3 },\n];\n\nconst buttonsData = {\n  '/account-settings': defaultButtonsData,\n  '/preferences': defaultButtonsData,\n  '/statistics': defaultButtonsData,\n  '/user-settings': defaultButtonsData,\n  '/home': [\n    { to: '/eaten-food', icon: ['fas', 'list'], key: 1 },\n    { to: '/add-eaten-food', icon: ['fas', 'utensils'], key: 2 },\n    { to: '/menu', icon: ['fas', 'cog'], key: 3 },\n  ],\n  '/add-eaten-food': [\n    // { to: '/create-custom-food', icon: ['fas', 'folder-plus'], key: 1 },\n    { to: '/custom-foods', icon: ['fas', 'folder-open'], key: 1 },\n    { to: '/home', icon: ['fas', 'home'], key: 2 },\n    { to: '/menu', icon: ['fas', 'cog'], key: 3 },\n\n  ],\n  '/eaten-food': [\n    { to: '/add-eaten-food', icon: ['fas', 'utensils'], key: 1 },\n    { to: '/home', icon: ['fas', 'home'], key: 2 },\n    { to: '/menu', icon: ['fas', 'cog'], key: 3 },\n  ],\n  '/custom-foods': [\n    { to: '/create-custom-food', icon: ['fas', 'folder-plus'], key: 1 },\n    { to: '/home', icon: ['fas', 'home'], key: 2 },\n    { to: '/menu', icon: ['fas', 'cog'], key: 3 },\n\n  ],\n};\n\nconst Navbar = () => {\n  const Buttons = () => {\n    const location = useLocation();\n    const currentPath = location.pathname;\n    return buttonsData[currentPath]\n      .map(b => <NavButton to={b.to} icon={b.icon} key={b.key} />);\n  };\n\n  return (\n    <nav className=\"main-navbar\">\n      <Buttons />\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactTooltip from 'react-tooltip';\n\nconst MacrosLine = ({ numbers, nutrient }) => {\n  const Nutrient = `${nutrient[0].toUpperCase()}${nutrient.slice(1)}`;\n  const percent = numbers[`currentPercentOfDaily${Nutrient}Need`];\n\n  return (\n    <div className=\"macros-line\">\n      <div className={`macros-image-container ${nutrient}-image-container`} />\n      <div\n        className=\"macros-progress-bar\"\n        data-tip\n        data-for={`${nutrient}-tip`}\n      >\n        <ReactTooltip\n          id={`${nutrient}-tip`}\n          aria-haspopup=\"true\"\n          place=\"top\"\n          type=\"dark\"\n          effect=\"float\"\n        >\n          <h2 className=\"tooltip-title\">\n            {`${Nutrient}s`}\n          </h2>\n          <p className=\"tooltip-text\">\n            {`${percent}% of daily ${nutrient} need`}\n          </p>\n        </ReactTooltip>\n        <div className={`percent-container ${nutrient}-percent-container`}>\n          {percent}\n          %\n        </div>\n        <div\n          className={`macros-progress-bar-inner ${nutrient}-progress-bar-inner`}\n          style={{ width: `${percent > 100 ? 100 : percent}%` }}\n        />\n      </div>\n    </div>\n  );\n};\n\nMacrosLine.propTypes = {\n  numbers: PropTypes.objectOf(PropTypes.number).isRequired,\n  nutrient: PropTypes.string.isRequired,\n};\n\nexport default MacrosLine;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MacrosLine from '../MacrosLine';\n\nconst MacrosContainer = ({ numbers }) => (\n  <section className=\"macros-container\">\n    <MacrosLine numbers={numbers} nutrient=\"protein\" />\n    <MacrosLine numbers={numbers} nutrient=\"fat\" />\n    <MacrosLine numbers={numbers} nutrient=\"carb\" />\n  </section>\n);\n\nMacrosContainer.propTypes = {\n  numbers: PropTypes.objectOf(PropTypes.number).isRequired,\n};\n\nexport default MacrosContainer;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { loadUser } from '../actions/UserActions';\n\nexport default () => {\n  const user = useSelector(state => state.user.loggedInUser);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadUser());\n  }, [user._id, dispatch]);\n  return user;\n};\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { loadEatenFoods } from '../../../actions/HistoryActions';\nimport getNumbers from '../../../services/calculation.service';\nimport CaloriesChart from '../CaloriesChart';\nimport Loader from '../../Loader';\nimport Navbar from '../../Navigation/Navbar';\nimport MacrosContainer from '../MacrosContainer';\nimport useLoadUser from '../../../hooks/useLoadUser';\n\nconst HomePage = () => {\n  const [isAlternateContentShown, setIsAlternateContentShown] = useState(false);\n  const toggleAlternateContent = () => {\n    setIsAlternateContentShown(!isAlternateContentShown);\n  };\n\n  const user = useLoadUser();\n  const eatenFoods = useSelector(state => state.history.eatenFoods);\n  const isLoading = useSelector(state => state.system.isLoading);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadEatenFoods(user._id));\n  }, [user._id, dispatch]);\n\n  const numbers = eatenFoods ? getNumbers(user, eatenFoods) : {};\n\n  return (\n    <>\n      <main className=\"page\">\n        {isLoading ? <Loader />\n          : (\n            <>\n              <CaloriesChart\n                numbers={numbers}\n                isAlternateContentShown={isAlternateContentShown}\n                toggleAlternateContent={toggleAlternateContent}\n              />\n              <MacrosContainer numbers={numbers} />\n            </>\n          )}\n      </main>\n      <Navbar />\n    </>\n  );\n};\n\nexport default HomePage;\n","/* eslint-disable jsx-a11y/control-has-associated-label */\n/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useAsyncCallback } from 'react-async-hook';\nimport { updateUser } from '../../../actions/UserActions';\nimport Navbar from '../../Navigation/Navbar';\nimport useLoadUser from '../../../hooks/useLoadUser';\n\nconst UserSettingsPage = () => {\n  const user = useLoadUser();\n  const {\n    _id,\n    username,\n  } = user;\n  const currentHeight = user.height || '';\n  const currentBodyWeight = user.bodyWeight || '';\n  const currentGender = user.gender || 'male';\n  const currentHipCircumference = user.hipCircumference || '';\n  const currrentWaistCircumference = user.waistCircumference || '';\n  const currentNeckCircumference = user.neckCircumference || '';\n  const currentPhysicalActivityLevel = user.physicalActivityLevel || 'moderate';\n  const currentGoal = user.goal || 'normalWeightLoss';\n  const isUserInfoSet = user.height !== '';\n  const [height, setHeight] = useState(currentHeight);\n  const [bodyWeight, setBodyWeight] = useState(currentBodyWeight);\n  const [gender, setGender] = useState(currentGender);\n  const [hipCircumference, setHipCircumference] = useState(currentHipCircumference);\n  const [waistCircumference, setWaistCircumference] = useState(currrentWaistCircumference);\n  const [neckCircumference, setNeckCircumference] = useState(currentNeckCircumference);\n  const [physicalActivityLevel, setPhysicalActivityLevel] = useState(currentPhysicalActivityLevel);\n  const [goal, setGoal] = useState(currentGoal);\n\n  useEffect(() => {\n    setHeight(currentHeight);\n    setBodyWeight(currentBodyWeight);\n    setGender(currentGender);\n    setHipCircumference(currentHipCircumference);\n    setWaistCircumference(currrentWaistCircumference);\n    setNeckCircumference(currentNeckCircumference);\n    setPhysicalActivityLevel(currentPhysicalActivityLevel);\n    setGoal(currentGoal);\n  }, [\n    currentHeight,\n    currentBodyWeight,\n    currentGender,\n    currentHipCircumference,\n    currrentWaistCircumference,\n    currentNeckCircumference,\n    currentPhysicalActivityLevel,\n    currentGoal,\n  ]);\n\n  const set = (name) => {\n    switch (name) {\n      case 'height':\n        return setHeight;\n      case 'bodyWeight':\n        return setBodyWeight;\n      case 'gender':\n        return setGender;\n      case 'hipCircumference':\n        return setHipCircumference;\n      case 'waistCircumference':\n        return setWaistCircumference;\n      case 'neckCircumference':\n        return setNeckCircumference;\n      case 'physicalActivityLevel':\n        return setPhysicalActivityLevel;\n      case 'goal':\n        return setGoal;\n      default:\n        break;\n    }\n  };\n\n  const handleChange = ({ value, dataset }) => {\n    const { name } = dataset;\n    set(name)(value);\n  };\n\n  const dispatch = useDispatch();\n  const saveUserSettings = useAsyncCallback(async () => {\n    const updatedUser = {\n      _id,\n      username,\n      height,\n      bodyWeight,\n      gender,\n      hipCircumference,\n      waistCircumference,\n      neckCircumference,\n      physicalActivityLevel,\n      goal,\n    };\n    dispatch(updateUser(updatedUser));\n  });\n\n  const onSaveUserSettings = (e) => {\n    e.preventDefault();\n    saveUserSettings.execute();\n  };\n\n  return (\n    <>\n      <main className=\"page\">\n        <header>\n          <h1 className=\"page-title\">\n            { isUserInfoSet ? `Hey, ${username}!` : `Welcome, ${username}!`}\n          </h1>\n          <h2 className=\"user-settings-page-subtitle\">\n            { isUserInfoSet\n              ? 'We advise you to update this data at least once a month (this is important for the correct work with your weight):'\n              : 'Please enter the following data (this is necessary for the application to work correctly):'}\n          </h2>\n        </header>\n        <form\n          className=\"user-settings-form\"\n          onSubmit={onSaveUserSettings}\n        >\n          <div className=\"user-settings-input-container\">\n            <label\n              htmlFor=\"user-settings-height-input\"\n              className=\"user-settings-input-label\"\n            >\n              Height:*\n            </label>\n            <input\n              type=\"number\"\n              id=\"user-settings-height-input\"\n              className=\"user-settings-input\"\n              placeholder=\"Number in cm\"\n              value={height}\n              data-name=\"height\"\n              onChange={e => handleChange(e.target)}\n              min=\"0\"\n              max=\"300\"\n              step=\"any\"\n              required\n            />\n          </div>\n          <div className=\"user-settings-input-container\">\n            <label\n              htmlFor=\"user-settings-weight-input\"\n              className=\"user-settings-input-label\"\n            >\n              Weight:*\n            </label>\n            <input\n              type=\"number\"\n              id=\"user-settings-weight-input\"\n              className=\"user-settings-input\"\n              placeholder=\"Number in kg\"\n              value={bodyWeight}\n              data-name=\"bodyWeight\"\n              onChange={e => handleChange(e.target)}\n              min=\"0\"\n              max=\"500\"\n              step=\"any\"\n              required\n            />\n          </div>\n          <div className=\"user-settings-input-container\">\n            <label\n              htmlFor=\"user-settings-gender-input\"\n              className=\"user-settings-input-label\"\n            >\n              Gender:*\n            </label>\n            <select\n              id=\"user-settings-gender-input\"\n              className=\"user-settings-input\"\n              value={gender}\n              data-name=\"gender\"\n              onChange={e => handleChange(e.target)}\n              required\n            >\n              <option value=\"male\">Male</option>\n              <option value=\"female\">Female</option>\n            </select>\n          </div>\n          <div className=\"user-settings-input-container\">\n            { gender === 'female' && (\n              <>\n                <label\n                  htmlFor=\"user-settings-hip-circumference-input\"\n                  className=\"user-settings-input-label\"\n                >\n                  Hip Circumference:*\n                </label>\n                <input\n                  type=\"number\"\n                  id=\"user-settings-hip-circumference-input\"\n                  className=\"user-settings-input\"\n                  placeholder=\"Number in cm\"\n                  value={hipCircumference}\n                  data-name=\"hipCircumference\"\n                  onChange={e => handleChange(e.target)}\n                  min=\"0\"\n                  max=\"500\"\n                  step=\"any\"\n                  required\n                />\n              </>\n            )}\n          </div>\n          <div className=\"user-settings-input-container\">\n            <label\n              htmlFor=\"user-settings-waist-circumference-input\"\n              className=\"user-settings-input-label\"\n            >\n              Waist Circumference:*\n            </label>\n            <input\n              type=\"number\"\n              id=\"user-settings-waist-circumference-input\"\n              className=\"user-settings-input\"\n              placeholder=\"Number in cm\"\n              value={waistCircumference}\n              data-name=\"waistCircumference\"\n              onChange={e => handleChange(e.target)}\n              min=\"0\"\n              max=\"300\"\n              step=\"any\"\n              required\n            />\n          </div>\n          <div className=\"user-settings-input-container\">\n            <label\n              htmlFor=\"user-settings-neck-circumference-input\"\n              className=\"user-settings-input-label\"\n            >\n              Neck Circumference:*\n            </label>\n            <input\n              type=\"number\"\n              id=\"user-settings-neck-circumference-input\"\n              className=\"user-settings-input\"\n              placeholder=\"Number in cm\"\n              value={neckCircumference}\n              data-name=\"neckCircumference\"\n              onChange={e => handleChange(e.target)}\n              min=\"0\"\n              max=\"100\"\n              step=\"any\"\n              required\n            />\n          </div>\n          <div className=\"user-settings-input-container\">\n            <label\n              htmlFor=\"user-settings-physical-activity-level-input\"\n              className=\"user-settings-input-label\"\n            >\n              Physical Activity Level:*\n            </label>\n            <select\n              id=\"user-settings-physical-activity-level-input\"\n              className=\"user-settings-input\"\n              value={physicalActivityLevel}\n              data-name=\"physicalActivityLevel\"\n              onChange={e => handleChange(e.target)}\n              required\n            >\n              <option value=\"veryLight\">Very Light</option>\n              <option value=\"light\">Light</option>\n              <option value=\"moderate\">Moderate</option>\n              <option value=\"heavy\">Heavy</option>\n              <option value=\"veryHeavy\">Very Heavy</option>\n            </select>\n          </div>\n          <div className=\"user-settings-input-container\">\n            <label\n              htmlFor=\"user-settings-goal-input\"\n              className=\"user-settings-input-label\"\n            >\n              Goal:*\n            </label>\n            <select\n              id=\"user-settings-goal-input\"\n              className=\"user-settings-input\"\n              value={goal}\n              data-name=\"goal\"\n              onChange={e => handleChange(e.target)}\n              required\n            >\n              <option value=\"fastWeightLoss\">Fast Weight Loss</option>\n              <option value=\"normalWeightLoss\">Normal Weight Loss</option>\n              <option value=\"weightMaintenance\">Weight Maintenance</option>\n              <option value=\"massGain\">Mass Gain</option>\n            </select>\n          </div>\n          <button\n            type=\"submit\"\n            className=\"user-settings-save-button\"\n          >\n            Save\n          </button>\n        </form>\n      </main>\n      {isUserInfoSet && <Navbar />}\n    </>\n  );\n};\n\nexport default UserSettingsPage;\n","/* eslint-disable import/prefer-default-export */\nexport const getRandomStr = () => Math.random()\n  .toString(36)\n  .substring(2, 15)\n  + Math.random()\n    .toString(36)\n    .substring(2, 15);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ConfirmModal = ({\n  onClose,\n  text,\n  name,\n  onYes,\n  onNo,\n  yesButtonText,\n  noButtonText,\n}) => (\n  <div className=\"confirm-modal\">\n    <header className=\"confirm-modal-header\">\n      <h2 className=\"confirm-modal-title\">\n        {text}\n      </h2>\n      <h3 className=\"confirm-modal-item-name\">\n        <p>\n          {name}\n          <span>\n            ?\n          </span>\n        </p>\n      </h3>\n    </header>\n    <section className=\"confirm-modal-options\">\n      <button\n        type=\"button\"\n        className=\"confirm-modal-no-button\"\n        onClick={() => {\n          if (onNo) onNo();\n          onClose();\n        }}\n      >\n        {noButtonText}\n      </button>\n      <button\n        type=\"button\"\n        className=\"confirm-modal-yes-button\"\n        onClick={() => {\n          if (onYes) onYes();\n          onClose();\n        }}\n      >\n        {yesButtonText}\n      </button>\n    </section>\n  </div>\n);\n\nConfirmModal.defaultProps = {\n  text: 'Are you shure',\n  name: null,\n  onYes: null,\n  onNo: null,\n  yesButtonText: 'Yes',\n  noButtonText: 'No',\n};\n\nConfirmModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  text: PropTypes.string,\n  name: PropTypes.string,\n  onYes: PropTypes.func,\n  onNo: PropTypes.func,\n  yesButtonText: PropTypes.string,\n  noButtonText: PropTypes.string,\n};\n\nexport default ConfirmModal;\n","import React, { useState } from 'react';\nimport { useAsyncCallback } from 'react-async-hook';\nimport { useDispatch } from 'react-redux';\nimport Modal from 'react-modal';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport { updateEatenFoods, deleteEatenFood } from '../../../actions/HistoryActions';\nimport ConfirmModal from '../../ConfirmModal';\n\nconst EditEatenFoodModal = ({\n  isModalOpen,\n  closeModal,\n  _id,\n  name,\n  brand,\n  calories,\n  proteins,\n  fats,\n  carbs,\n  previousWeight,\n}) => {\n  Modal.setAppElement('#root');\n  const [weight, setWeight] = useState(previousWeight);\n\n  const decreaseWeight = () => {\n    if (weight <= 10) {\n      setWeight(0);\n      return;\n    }\n    setWeight(weight - 10);\n  };\n\n  const increaseWeight = () => {\n    if (weight >= 990) {\n      setWeight(1000);\n      return;\n    }\n    setWeight(weight + 10);\n  };\n\n  const dispatch = useDispatch();\n  const updateFood = useAsyncCallback(async () => {\n    const food = {\n      _id,\n      name,\n      brand,\n      calories,\n      proteins,\n      fats,\n      carbs,\n      weight,\n    };\n    dispatch(updateEatenFoods(food));\n  });\n\n  const removeFood = useAsyncCallback(async () => {\n    const food = {\n      _id,\n    };\n    dispatch(deleteEatenFood(food));\n  });\n\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n    updateFood.execute();\n    closeModal();\n  };\n\n  const createConfirmModal = ({ onClose }) => (\n    <ConfirmModal\n      onClose={onClose}\n      text=\"Are you sure you wish to delete\"\n      name={name}\n      onYes={() => {\n        removeFood.execute();\n        closeModal();\n      }}\n      yesButtonText=\"Delete\"\n      noButtonText=\"Return\"\n    />\n  );\n\n  const onRemoveFood = () => {\n    confirmAlert({\n      customUI: createConfirmModal,\n    });\n  };\n\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      onRequestClose={closeModal}\n      contentLabel=\"Edit eaten food\"\n      className=\"edit-eaten-food-modal\"\n    >\n      <button\n        className=\"edit-eaten-food-modal-close-button\"\n        type=\"button\"\n        onClick={e => closeModal(e)}\n      >\n        &times;\n      </button>\n      <header className=\"edit-eaten-food-modal-header\">\n        <h2 className=\"edit-eaten-food-modal-title\">\n          {name}\n        </h2>\n        <h3 className=\"edit-eaten-food-modal-subtitle\">\n          {brand}\n        </h3>\n      </header>\n      <div className=\"edit-eaten-food-modal-info\">\n        <p>\n          {`Calories: ${(calories * weight) / 100}`}\n        </p>\n        <p>\n          {`Proteins: ${(proteins * weight) / 100}`}\n        </p>\n        <p>\n          {`Fats: ${(fats * weight) / 100}`}\n        </p>\n        <p>\n          {`Carbs: ${(carbs * weight) / 100}`}\n        </p>\n      </div>\n      <form\n        id=\"edit-eaten-food-modal-form\"\n        className=\"edit-eaten-food-modal-form\"\n        onSubmit={onFormSubmit}\n      >\n        <fieldset className=\"edit-eaten-food-modal-weight-inputs\">\n          <legend\n            className=\"edit-eaten-food-modal-weight-legend\"\n          >\n            Weight:\n          </legend>\n          <div>\n            <button\n              type=\"button\"\n              className=\"edit-eaten-food-modal-weight-dec-button\"\n              onClick={decreaseWeight}\n            >\n              -\n            </button>\n            <input\n              className=\"edit-eaten-food-modal-weight-input\"\n              aria-label=\"weight\"\n              type=\"number\"\n              min=\"0\"\n              max=\"1000\"\n              step=\"any\"\n              value={weight}\n              onChange={e => setWeight(e.target.value)}\n            />\n            <button\n              type=\"button\"\n              className=\"edit-eaten-food-modal-weight-inc-button\"\n              onClick={increaseWeight}\n            >\n              +\n            </button>\n          </div>\n        </fieldset>\n      </form>\n      <div className=\"edit-eaten-food-modal-options-container\">\n        <button\n          type=\"submit\"\n          form=\"edit-eaten-food-modal-form\"\n          className=\"edit-eaten-food-modal-submit-button\"\n        >\n          Save\n        </button>\n        <button\n          type=\"button\"\n          aria-label=\"Delete eaten food\"\n          className=\"edit-eaten-food-modal-delete-button\"\n          onClick={onRemoveFood}\n        >\n          <FontAwesomeIcon\n            icon={['fas', 'trash']}\n            className=\"edit-eaten-food-delete-button-icon\"\n          />\n        </button>\n      </div>\n    </Modal>\n  );\n};\n\nEditEatenFoodModal.propTypes = {\n  isModalOpen: PropTypes.bool.isRequired,\n  closeModal: PropTypes.func.isRequired,\n  _id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  brand: PropTypes.string.isRequired,\n  calories: PropTypes.number.isRequired,\n  proteins: PropTypes.number.isRequired,\n  fats: PropTypes.number.isRequired,\n  carbs: PropTypes.number.isRequired,\n  previousWeight: PropTypes.number.isRequired,\n};\n\nexport default EditEatenFoodModal;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport EditEatenFoodModal from '../EditEatenFoodModal';\n\nconst EatenFoodCard = ({ food }) => {\n  const {\n    _id,\n    name,\n    brand,\n  } = food;\n  const caloriesPer100g = +food.calories;\n  const proteinsPer100g = +food.proteins;\n  const fatsPer100g = +food.fats;\n  const carbsPer100g = +food.carbs;\n  const weight = Math.round(+food.weight);\n  const calories = Math.round((caloriesPer100g * weight) / 100);\n  const proteins = Math.round((proteinsPer100g * weight) / 100);\n  const fats = Math.round((fatsPer100g * weight) / 100);\n  const carbs = Math.round((carbsPer100g * weight) / 100);\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = (e) => {\n    if (e) e.stopPropagation();\n    setIsModalOpen(false);\n  };\n\n  const handleKeyDown = (e) => {\n    const code = e.charCode || e.keyCode;\n    if (code === 13) {\n      openModal();\n    }\n  };\n\n  return (\n    <li\n      className=\"eaten-food-card\"\n      onClick={openModal}\n      onKeyDown={(e) => { handleKeyDown(e); }}\n      role=\"option\"\n      aria-selected=\"false\"\n    >\n      <h2 className=\"eaten-food-card-title\">\n        <bdi>\n          {name}\n        </bdi>\n        <bdi>\n          {`${brand !== '' ? `, ${brand}` : ''}, `}\n        </bdi>\n        {`${weight}g`}\n      </h2>\n      <p className=\"eaten-food-card-info\">\n        {`Calories: ${calories}`}\n        <br />\n        {`Proteins: ${proteins} | Fats: ${fats} | Carbs: ${carbs}`}\n      </p>\n      {isModalOpen && (\n        <EditEatenFoodModal\n          isModalOpen={isModalOpen}\n          closeModal={closeModal}\n          _id={_id}\n          name={name}\n          brand={brand}\n          calories={caloriesPer100g}\n          proteins={proteinsPer100g}\n          fats={fatsPer100g}\n          carbs={carbsPer100g}\n          previousWeight={weight}\n        />\n      )}\n    </li>\n  );\n};\n\nEatenFoodCard.propTypes = {\n  food: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default EatenFoodCard;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getRandomStr } from '../../../services/util.servise';\nimport { loadEatenFoods } from '../../../actions/HistoryActions';\nimport Navbar from '../../Navigation/Navbar';\nimport EatenFoodCard from '../EatenFoodCard';\nimport Loader from '../../Loader';\nimport useLoadUser from '../../../hooks/useLoadUser';\n\nconst EatenFoodPage = () => {\n  const user = useLoadUser();\n  const eatenFoods = useSelector(state => state.history.eatenFoods);\n  const isLoading = useSelector(state => state.system.isLoading);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadEatenFoods(user._id));\n  }, [user._id, dispatch]);\n\n  const [totalData, setTotalData] = useState({\n    totalCalories: 0,\n    totalProteins: 0,\n    totalFats: 0,\n    totalCarbs: 0,\n  });\n\n  const {\n    totalCalories,\n    totalProteins,\n    totalFats,\n    totalCarbs,\n  } = totalData;\n\n  useEffect(() => {\n    if (!eatenFoods) return;\n    const data = eatenFoods.reduce((acc, food) => {\n      const caloriesPer100g = +food.calories;\n      const proteinsPer100g = +food.proteins;\n      const fatsPer100g = +food.fats;\n      const carbsPer100g = +food.carbs;\n      const weight = Math.round(+food.weight);\n      const calories = Math.round((caloriesPer100g * weight) / 100);\n      const proteins = Math.round((proteinsPer100g * weight) / 100);\n      const fats = Math.round((fatsPer100g * weight) / 100);\n      const carbs = Math.round((carbsPer100g * weight) / 100);\n      acc.totalCalories += calories;\n      acc.totalProteins += proteins;\n      acc.totalFats += fats;\n      acc.totalCarbs += carbs;\n      return acc;\n    }, {\n      totalCalories: 0,\n      totalProteins: 0,\n      totalFats: 0,\n      totalCarbs: 0,\n    });\n    setTotalData(data);\n  }, [eatenFoods]);\n\n  return (\n    <>\n      <main className=\"page\">\n        <h1 className=\"page-title\">Eaten foods</h1>\n        <ul className=\"eaten-food-cards\">\n          {isLoading ? <Loader />\n            : (\n              <>\n                {eatenFoods && eatenFoods.map(food => (\n                  <EatenFoodCard key={getRandomStr() + food.name} food={food} />\n                ))}\n                <li className=\"eaten-food-total\">\n                  <h2 className=\"eaten-food-total-title\">Total:</h2>\n                  <p>\n                    {`Calories: ${totalCalories}`}\n                    <br />\n                    {`Proteins: ${totalProteins} | Fats: ${totalFats} | Carbs: ${totalCarbs}`}\n                  </p>\n                </li>\n              </>\n            )}\n        </ul>\n      </main>\n      <Navbar />\n    </>\n  );\n};\n\nexport default EatenFoodPage;\n","import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { loadFoods } from '../actions/FoodActions';\n\nexport default () => {\n  const foods = useSelector(state => state.food.foods);\n  const dispatch = useDispatch();\n  const { pathname } = useLocation();\n  const [inputText, setInputText] = useState('');\n  useEffect(() => {\n    dispatch(loadFoods(inputText, pathname));\n  }, [inputText, dispatch, pathname]);\n  return {\n    inputText,\n    setInputText,\n    foods,\n  };\n};\n","import React, { useState } from 'react';\nimport { useAsyncCallback } from 'react-async-hook';\nimport { useDispatch } from 'react-redux';\nimport Modal from 'react-modal';\nimport PropTypes from 'prop-types';\nimport { addEatenFood } from '../../../actions/HistoryActions';\n\nconst AddEatenFoodModal = ({\n  isModalOpen,\n  closeModal,\n  name,\n  brand,\n  calories,\n  proteins,\n  fats,\n  carbs,\n}) => {\n  Modal.setAppElement('#root');\n  const [weight, setWeight] = useState(100);\n\n  const decreaseWeight = () => {\n    if (weight <= 10) {\n      setWeight(0);\n      return;\n    }\n    setWeight(weight - 10);\n  };\n\n  const increaseWeight = () => {\n    if (weight >= 990) {\n      setWeight(1000);\n      return;\n    }\n    setWeight(weight + 10);\n  };\n\n  const dispatch = useDispatch();\n  const addFood = useAsyncCallback(async () => {\n    const food = {\n      name,\n      brand,\n      calories,\n      proteins,\n      fats,\n      carbs,\n      weight,\n    };\n    dispatch(addEatenFood(food));\n  });\n\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n    addFood.execute();\n    closeModal();\n  };\n\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      onRequestClose={closeModal}\n      contentLabel=\"Add food\"\n      className=\"add-eaten-food-modal\"\n    >\n      <button\n        className=\"add-eaten-food-modal-close-button\"\n        type=\"button\"\n        onClick={e => closeModal(e)}\n      >\n        &times;\n      </button>\n      <header className=\"add-eaten-food-modal-header\">\n        <h2 className=\"add-eaten-food-modal-title\">\n          {name}\n        </h2>\n        <h3 className=\"add-eaten-food-modal-subtitle\">\n          {brand}\n        </h3>\n      </header>\n      <div className=\"add-eaten-food-modal-info\">\n        <p>\n          {`Calories: ${(calories * weight) / 100}`}\n        </p>\n        <p>\n          {`Proteins: ${(proteins * weight) / 100}`}\n        </p>\n        <p>\n          {`Fats: ${(fats * weight) / 100}`}\n        </p>\n        <p>\n          {`Carbs: ${(carbs * weight) / 100}`}\n        </p>\n      </div>\n      <form\n        id=\"add-eaten-food-modal-form\"\n        className=\"add-eaten-food-modal-form\"\n        onSubmit={onFormSubmit}\n      >\n        <fieldset className=\"add-eaten-food-modal-weight-inputs\">\n          <legend\n            className=\"add-eaten-food-modal-weight-legend\"\n          >\n            Weight:\n          </legend>\n          <div>\n            <button\n              type=\"button\"\n              className=\"add-eaten-food-modal-weight-dec-button\"\n              onClick={decreaseWeight}\n            >\n              -\n            </button>\n            <input\n              className=\"add-eaten-food-modal-weight-input\"\n              aria-label=\"weight\"\n              type=\"number\"\n              min=\"0\"\n              max=\"1000\"\n              step=\"any\"\n              value={weight}\n              onChange={e => setWeight(e.target.value)}\n            />\n            <button\n              type=\"button\"\n              className=\"add-eaten-food-modal-weight-inc-button\"\n              onClick={increaseWeight}\n            >\n              +\n            </button>\n          </div>\n        </fieldset>\n      </form>\n      <button\n        type=\"submit\"\n        form=\"add-eaten-food-modal-form\"\n        className=\"add-eaten-food-modal-submit-button\"\n      >\n        Add\n      </button>\n    </Modal>\n  );\n};\n\nAddEatenFoodModal.propTypes = {\n  isModalOpen: PropTypes.bool.isRequired,\n  closeModal: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  brand: PropTypes.string.isRequired,\n  calories: PropTypes.number.isRequired,\n  proteins: PropTypes.number.isRequired,\n  fats: PropTypes.number.isRequired,\n  carbs: PropTypes.number.isRequired,\n};\n\nexport default AddEatenFoodModal;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport AddEatenFoodModal from '../AddEatenFoodModal';\n\nconst AddEatenFoodCard = ({ food }) => {\n  const {\n    name,\n    brand,\n  } = food;\n  const calories = Math.round(+food.calories);\n  const proteins = Math.round(+food.proteins);\n  const fats = Math.round(+food.fats);\n  const carbs = Math.round(+food.carbs);\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = (e) => {\n    if (e) e.stopPropagation();\n    setIsModalOpen(false);\n  };\n\n  const handleKeyDown = (e) => {\n    const code = e.charCode || e.keyCode;\n    if (code === 13) {\n      openModal();\n    }\n  };\n\n  return (\n    <li\n      className=\"add-eaten-food-card\"\n      onClick={openModal}\n      onKeyDown={(e) => { handleKeyDown(e); }}\n      role=\"option\"\n      aria-selected=\"false\"\n    >\n      <h2 className=\"add-eaten-food-card-title\">\n        {`${name}${brand !== '' ? `, ${brand}` : ''}`}\n      </h2>\n      <p className=\"add-eaten-food-card-info\">\n        {`Calories: ${calories}`}\n        <br />\n        {`Proteins: ${proteins} | Fats: ${fats} | Carbs: ${carbs}`}\n      </p>\n      {isModalOpen && (\n        <AddEatenFoodModal\n          isModalOpen={isModalOpen}\n          closeModal={closeModal}\n          name={name}\n          brand={brand}\n          calories={calories}\n          proteins={proteins}\n          fats={fats}\n          carbs={carbs}\n        />\n      )}\n    </li>\n  );\n};\n\nAddEatenFoodCard.propTypes = {\n  food: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default AddEatenFoodCard;\n","import React, { useRef, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { DebounceInput } from 'react-debounce-input';\nimport useFoodSearch from '../../../hooks/useFoodSearch';\nimport { getRandomStr } from '../../../services/util.servise';\nimport Loader from '../../Loader';\nimport Navbar from '../../Navigation/Navbar';\nimport AddEatenFoodCard from '../AddEatenFoodCard';\n\nconst AddEatenFoodPage = () => {\n  const {\n    inputText,\n    setInputText,\n    foods,\n  } = useFoodSearch();\n\n  const isLoading = useSelector(state => state.system.isLoading);\n\n  const searchInput = useRef(null);\n  useEffect(() => {\n    searchInput.current.focus();\n  }, []);\n\n  const handleSearchInput = ({ value }) => {\n    setInputText(value);\n  };\n\n  return (\n    <>\n      <main className=\"page\">\n        <header className=\"options-container\">\n          <h1 className=\"page-title\">Add eaten food</h1>\n          <DebounceInput\n            minLength={0}\n            type=\"search\"\n            debounceTimeout={300}\n            className=\"add-eaten-food-search\"\n            placeholder=\"Search food\"\n            aria-label=\"Search food\"\n            value={inputText}\n            inputRef={searchInput}\n            onChange={(e) => { handleSearchInput(e.target); }}\n          />\n        </header>\n        <ul className=\"add-eaten-food-cards\">\n          {isLoading\n            ? <Loader />\n            : foods\n              .sort((a, b) => a.name.localeCompare(b.name))\n              .map(food => (\n                <AddEatenFoodCard\n                  key={food._id ? food._id : getRandomStr() + food.name}\n                  food={food}\n                />\n              ))}\n        </ul>\n      </main>\n      <Navbar />\n    </>\n  );\n};\n\nexport default AddEatenFoodPage;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useAsyncCallback } from 'react-async-hook';\nimport Modal from 'react-modal';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport { updateCustomFoods, deleteCustomFood } from '../../../actions/FoodActions';\nimport ConfirmModal from '../../ConfirmModal';\n\nconst EditCustomFoodModal = ({\n  isModalOpen,\n  closeModal,\n  _id,\n  prevName,\n  prevBrand,\n  prevCalories,\n  prevProteins,\n  prevFats,\n  prevCarbs,\n}) => {\n  Modal.setAppElement('#root');\n\n  const [name, setName] = useState(prevName);\n  const [brand, setBrand] = useState(prevBrand);\n  const [calories, setCalories] = useState(prevCalories);\n  const [proteins, setProteins] = useState(prevProteins);\n  const [fats, setFats] = useState(prevFats);\n  const [carbs, setCarbs] = useState(prevCarbs);\n\n  const dispatch = useDispatch();\n  const updateFood = useAsyncCallback(async () => {\n    const food = {\n      _id,\n      name,\n      brand,\n      calories,\n      proteins,\n      fats,\n      carbs,\n    };\n    dispatch(updateCustomFoods(food));\n  });\n\n  const removeFood = useAsyncCallback(async () => {\n    dispatch(deleteCustomFood(_id));\n  });\n\n  const createConfirmModal = ({ onClose }) => (\n    <ConfirmModal\n      onClose={onClose}\n      text=\"Are you sure you wish to delete\"\n      name={name}\n      onYes={() => {\n        removeFood.execute();\n        closeModal();\n      }}\n      yesButtonText=\"Delete\"\n      noButtonText=\"Return\"\n    />\n  );\n\n  const onRemoveFood = () => {\n    confirmAlert({\n      customUI: createConfirmModal,\n    });\n  };\n\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n    updateFood.execute();\n    closeModal();\n  };\n\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      onRequestClose={closeModal}\n      contentLabel=\"Edit food\"\n      className=\"edit-custom-food\"\n    >\n      <button\n        className=\"edit-custom-food-close-button\"\n        type=\"button\"\n        onClick={e => closeModal(e)}\n      >\n        &times;\n      </button>\n      <h2 className=\"edit-custom-food-header\">\n        Edit food\n      </h2>\n      <form\n        className=\"edit-custom-food-form\"\n        onSubmit={onFormSubmit}\n      >\n        <input\n          type=\"text\"\n          className=\"edit-custom-food-input edit-custom-food-name-input\"\n          aria-label=\"name\"\n          value={name}\n          placeholder=\"Name\"\n          onChange={e => setName(e.target.value)}\n          required\n        />\n        <input\n          type=\"text\"\n          className=\"edit-custom-food-input edit-custom-food-brand-input\"\n          aria-label=\"brand\"\n          value={brand}\n          placeholder=\"Brand\"\n          onChange={e => setBrand(e.target.value)}\n          required\n        />\n        <input\n          type=\"number\"\n          min=\"0\"\n          max=\"1000\"\n          step=\"any\"\n          className=\"edit-custom-food-input edit-custom-food-calories-input\"\n          aria-label=\"calories\"\n          value={calories}\n          placeholder=\"Calories\"\n          onChange={e => setCalories(e.target.value)}\n          required\n        />\n        <input\n          type=\"number\"\n          min=\"0\"\n          max=\"100\"\n          step=\"any\"\n          className=\"edit-custom-food-input edit-custom-food-proteins-input\"\n          aria-label=\"proteins\"\n          value={proteins}\n          placeholder=\"Proteins\"\n          onChange={e => setProteins(e.target.value)}\n          required\n        />\n        <input\n          type=\"number\"\n          min=\"0\"\n          max=\"100\"\n          step=\"any\"\n          className=\"edit-custom-food-input edit-custom-food-fats-input\"\n          aria-label=\"fats\"\n          value={fats}\n          placeholder=\"Fats\"\n          onChange={e => setFats(e.target.value)}\n          required\n        />\n        <input\n          type=\"number\"\n          min=\"0\"\n          max=\"100\"\n          step=\"any\"\n          className=\"edit-custom-food-input edit-custom-food-carbs-input\"\n          aria-label=\"carbs\"\n          value={carbs}\n          placeholder=\"Carbs\"\n          onChange={e => setCarbs(e.target.value)}\n          required\n        />\n        <div className=\"edit-custom-food-submit-button-container\">\n          <button\n            type=\"submit\"\n            className=\"edit-custom-food-submit-button\"\n          >\n            Save\n          </button>\n          <button\n            type=\"button\"\n            aria-label=\"Delete eaten food\"\n            className=\"edit-eaten-food-modal-delete-button\"\n            onClick={onRemoveFood}\n          >\n            <FontAwesomeIcon\n              icon={['fas', 'trash']}\n              className=\"edit-eaten-food-delete-button-icon\"\n            />\n          </button>\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nEditCustomFoodModal.propTypes = {\n  isModalOpen: PropTypes.bool.isRequired,\n  closeModal: PropTypes.func.isRequired,\n  _id: PropTypes.string.isRequired,\n  prevName: PropTypes.string.isRequired,\n  prevBrand: PropTypes.string.isRequired,\n  prevCalories: PropTypes.number.isRequired,\n  prevProteins: PropTypes.number.isRequired,\n  prevFats: PropTypes.number.isRequired,\n  prevCarbs: PropTypes.number.isRequired,\n};\n\nexport default EditCustomFoodModal;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport EditCustomFoodModal from '../EditCustomFoodModal';\n\nconst CustomFoodCard = ({ food }) => {\n  const {\n    _id,\n    name,\n    brand,\n  } = food;\n  const calories = Math.round(+food.calories);\n  const proteins = Math.round(+food.proteins);\n  const fats = Math.round(+food.fats);\n  const carbs = Math.round(+food.carbs);\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = (e) => {\n    if (e) e.stopPropagation();\n    setIsModalOpen(false);\n  };\n\n  const handleKeyDown = (e) => {\n    const code = e.charCode || e.keyCode;\n    if (code === 13) {\n      openModal();\n    }\n  };\n\n  return (\n    <li\n      className=\"custom-food-card\"\n      onClick={openModal}\n      onKeyDown={(e) => { handleKeyDown(e); }}\n      role=\"option\"\n      aria-selected=\"false\"\n    >\n      <h2 className=\"custom-food-card-title\">\n        {`${name}${brand !== '' ? `, ${brand}` : ''}`}\n      </h2>\n      <p className=\"custom-food-card-info\">\n        {`Calories: ${calories}`}\n        <br />\n        {`Proteins: ${proteins} | Fats: ${fats} | Carbs: ${carbs}`}\n      </p>\n      {isModalOpen && (\n        <EditCustomFoodModal\n          isModalOpen={isModalOpen}\n          closeModal={closeModal}\n          _id={_id}\n          prevName={name}\n          prevBrand={brand}\n          prevCalories={calories}\n          prevProteins={proteins}\n          prevFats={fats}\n          prevCarbs={carbs}\n        />\n      )}\n    </li>\n  );\n};\n\nCustomFoodCard.propTypes = {\n  food: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default CustomFoodCard;\n","import React, { useRef, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { DebounceInput } from 'react-debounce-input';\nimport useFoodSearch from '../../../hooks/useFoodSearch';\nimport Loader from '../../Loader';\nimport Navbar from '../../Navigation/Navbar';\nimport CustomFoodCard from '../CustomFoodCard';\n\nconst CustomFoodPage = () => {\n  const {\n    inputText,\n    setInputText,\n    foods,\n  } = useFoodSearch();\n\n  const isLoading = useSelector(state => state.system.isLoading);\n\n  const searchInput = useRef(null);\n  useEffect(() => {\n    searchInput.current.focus();\n  }, []);\n\n  const handleSearchInput = ({ value }) => {\n    setInputText(value);\n  };\n\n  return (\n    <>\n      <main className=\"page\">\n        <header className=\"options-container\">\n          <h1 className=\"page-title\">Custom Foods</h1>\n          <DebounceInput\n            minLength={0}\n            type=\"search\"\n            debounceTimeout={300}\n            className=\"custom-foods-search\"\n            aria-label=\"Search food\"\n            placeholder=\"Search food\"\n            value={inputText}\n            inputRef={searchInput}\n            onChange={(e) => { handleSearchInput(e.target); }}\n          />\n        </header>\n        <ul className=\"custom-foods-cards\">\n          {isLoading ? <Loader />\n            : foods\n              .sort((a, b) => a.name.localeCompare(b.name))\n              .map(food => (\n                <CustomFoodCard key={food._id} food={food} />\n              ))}\n        </ul>\n      </main>\n      <Navbar />\n    </>\n  );\n};\n\nexport default CustomFoodPage;\n","import React from 'react';\nimport Navbar from '../../Navigation/Navbar';\n\nconst AccountSettingsPage = () => (\n  <>\n    <main className=\"page\">\n      Account Settings Page\n    </main>\n    <Navbar />\n  </>\n);\n\nexport default AccountSettingsPage;\n","import React from 'react';\nimport Navbar from '../../Navigation/Navbar';\n\n// eslint-disable-next-line arrow-body-style\nconst PreferencesPage = () => {\n  return (\n    <>\n      <main className=\"page\">\n        Preferences Page\n      </main>\n      <Navbar />\n    </>\n  );\n};\n\nexport default PreferencesPage;\n","import React from 'react';\nimport Navbar from '../../Navigation/Navbar';\n\nconst StatisticsPage = () => (\n  <>\n    <main className=\"page\">\n      Statistics Page\n    </main>\n    <Navbar />\n  </>\n);\n\nexport default StatisticsPage;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport menuActions from '../../../actions/SettingsMenuActions';\nimport { logout } from '../../../actions/UserActions';\nimport Footer from '../../Footer';\nimport useLoadUser from '../../../hooks/useLoadUser';\n\nconst SettingsMenu = () => {\n  const isShown = useSelector(state => state.settingsMenu.isShown);\n  const user = useSelector(state => state.user.loggedInUser);\n  const { username } = user;\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const hideMenu = () => {\n    dispatch(menuActions.hideMenu());\n  };\n\n  const onLogOut = () => {\n    hideMenu();\n    dispatch(logout());\n    history.push('/');\n  };\n\n  return (\n    <aside\n      className={`settings-menu ${isShown ? 'settings-menu-shown' : ''}`}\n    >\n      <header className=\"settings-menu-header\">\n        <h2 className=\"settings-menu-title\">{username}</h2>\n        <button\n          className=\"settings-menu-logout-button\"\n          type=\"button\"\n          onClick={onLogOut}\n          aria-label=\"Log out\"\n        />\n      </header>\n      <nav className=\"settings-menu-nav\">\n        <NavLink\n          className=\"settings-menu-nav-link\"\n          to=\"/user-settings\"\n          onClick={hideMenu}\n        >\n          User Settings\n        </NavLink>\n        <NavLink\n          className=\"settings-menu-nav-link\"\n          to=\"/account-settings\"\n          onClick={hideMenu}\n        >\n          Account Settings\n        </NavLink>\n        <NavLink\n          className=\"settings-menu-nav-link\"\n          to=\"/preferences\"\n          onClick={hideMenu}\n        >\n          Preferences\n        </NavLink>\n        <NavLink\n          className=\"settings-menu-nav-link\"\n          to=\"/statistics\"\n          onClick={hideMenu}\n        >\n          Statistics\n        </NavLink>\n      </nav>\n      <Footer />\n    </aside>\n  );\n};\n\nexport default SettingsMenu;\n","import React from 'react';\nimport { Switch, Route, useLocation } from 'react-router-dom';\nimport EntryPage from './components/Entry/EntryPage';\nimport HomePage from './components/Home/HomePage';\nimport UserSettingsPage from './components/Settings/UserSettingsPage';\nimport EatenFoodPage from './components/EatenFood/EatenFoodPage';\nimport AddEatenFoodPage from './components/AddEatenFood/AddEatenFoodPage';\nimport CustomFoodPage from './components/CustomFood/CustomFoodPage';\nimport AccountSettingsPage from './components/Settings/AccountSettingsPage';\nimport PreferencesPage from './components/Settings/PreferencesPage';\nimport StatisticsPage from './components/Settings/StatisticsPage';\nimport SettingsMenu from './components/Settings/SettingsMenu';\nimport './styles/global.scss';\n\nfunction App() {\n  const location = useLocation();\n  const currentPath = location.pathname;\n\n  return (\n    <div className=\"App\">\n      { (currentPath !== '/') && <SettingsMenu />}\n      <Switch>\n        <Route exact path=\"/\" component={EntryPage} />\n        <Route path=\"/home\" component={HomePage} />\n        <Route path=\"/eaten-food\" component={EatenFoodPage} />\n        <Route path=\"/add-eaten-food\" component={AddEatenFoodPage} />\n        <Route path=\"/custom-foods\" component={CustomFoodPage} />\n        <Route path=\"/user-settings\" component={UserSettingsPage} />\n        <Route path=\"/account-settings\" component={AccountSettingsPage} />\n        <Route path=\"/preferences\" component={PreferencesPage} />\n        <Route path=\"/statistics\" component={StatisticsPage} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\n  isLoading: false,\n};\n\nexport default function (state = initialState, action = {}) {\n  switch (action.type) {\n    case 'LOADING_START':\n      return { ...state, isLoading: true };\n    case 'LOADING_DONE':\n      return { ...state, isLoading: false };\n    default: return state;\n  }\n}\n","const initialState = {\n  loggedInUser: {},\n};\n\nexport default function (state = initialState, action = {}) {\n  switch (action.type) {\n    case 'SET_USER':\n      return {\n        ...state,\n        loggedInUser: {\n          ...action.user,\n        },\n      };\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  message: '',\n};\n\nexport default function (state = initialState, action = {}) {\n  switch (action.type) {\n    case 'SET_MESSAGE':\n      return { ...state, message: action.message };\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  eatenFoods: null,\n};\n\nexport default function (state = initialState, action = {}) {\n  switch (action.type) {\n    case 'SET_EATEN_FOODS':\n      return { ...state, eatenFoods: action.eatenFoods };\n    case 'ADD_EATEN_FOOD':\n      return { ...state, eatenFoods: [...state.eatenFoods, action.newFood] };\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  isShown: false,\n};\n\nexport default function (state = initialState, action = {}) {\n  switch (action.type) {\n    case 'SHOW_MENU':\n      return { ...state, isShown: false };\n    case 'HIDE_MENU':\n      return { ...state, isShown: false };\n    case 'TOGGLE_MENU':\n      return { ...state, isShown: !state.isShown };\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  foods: [],\n};\n\nexport default function (state = initialState, action = {}) {\n  switch (action.type) {\n    case 'SET_FOODS':\n      return { ...state, foods: action.foods };\n    case 'ADD_CUSTOM_FOOD':\n      return { ...state, foods: [...state.foods, action.newFood] };\n    case 'UPDATE_CUSTOM_FOOD':\n      return {\n        ...state,\n        foods: state.foods.map(food => (\n          food._id === action.updatedFood._id\n            ? action.updatedFood\n            : food\n        )),\n      };\n      case 'DELETE_CUSTOM_FOOD':\n      return {\n        ...state,\n        foods: state.foods.filter(food => food._id !== action.foodId),\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport SystemReducer from './SystemReducer';\nimport UserReducer from './UserReducer';\nimport MessageReducer from './MessageReducer';\nimport HistoryReducer from './HistoryReducer';\nimport SettingsMenuReducer from './SettingsMenuReducer';\nimport FoodReducer from './FoodReducer';\n\nconst rootReducer = combineReducers({\n  system: SystemReducer,\n  user: UserReducer,\n  message: MessageReducer,\n  history: HistoryReducer,\n  settingsMenu: SettingsMenuReducer,\n  food: FoodReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from 'redux';\n\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst Store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk)),\n);\n\nexport default Store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\n\n// Font Awesome\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport {\n  faPlusCircle,\n  faList,\n  faCog,\n  faHome,\n  faUtensils,\n  faFolderPlus,\n  faFolderOpen,\n  faTrash,\n} from '@fortawesome/free-solid-svg-icons';\nimport history from './history';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Store from './store';\n\nlibrary.add(\n  fab,\n  faPlusCircle,\n  faList,\n  faCog,\n  faHome,\n  faUtensils,\n  faFolderPlus,\n  faFolderOpen,\n  faTrash,\n);\n\nReactDOM.render(\n  <Provider store={Store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n// serviceWorker.unregister();\n"],"sourceRoot":""}