:root {
  // --vh property defined dynamically by JavaScript
  --m-distance: calc(var(--vh, 1vh) * 2.5);
  --input-height: calc(var(--m-distance) * 1.6);
  --sm-distance: calc(var(--m-distance) * 0.5);
  --l-distance: calc(var(--m-distance) * 1.6);
  --xl-distance: calc(var(--m-distance) * 2);
}

* {
  box-sizing: border-box;

  &:focus {
    outline: none;
    border: 1px solid green;
  }
}

html,
body,
#root {
  height: calc(#{$vh} * 100);
  min-height: calc(#{$vh} * 100);
  margin: 0;
  font-family: Montserrat, sans-serif;
  font-size: $root-font-size;

  @media (orientation: landscape) and (max-width: $desktop) {
    height: 100vw;
  }
}

.App {
  position: relative;
  width: 100%;
  height: 100%;
  min-height: 100%;
  background-color: #fff;
  margin: 0 auto;

  @media (min-width: $desktop) {
    width: calc(100vw / 3);
    border-inline-start: 1px solid black;
    border-inline-end: 1px solid black;
  }
}

.page {
  height: calc(#{$vh} * 85);
  min-height: calc(#{$vh} * 85);
  padding: var(--xl-distance) var(--xl-distance) 0 var(--xl-distance);
  display: flex;
  flex-flow: column nowrap;
  justify-content: space-between;
  align-items: center;
}

input[type=number] {
  border: 1px solid black;
} 
